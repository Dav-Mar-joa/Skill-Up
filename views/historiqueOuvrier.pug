html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Skil Up
    link(rel="manifest" href="/manifest.json")
    link(rel="stylesheet" href="/css/style.css")
    link(rel="icon", href="/assets/icons/favicon.ico", type="image/x-icon")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    style.
    
      h2{
        margin-bottom:10px;
        font-size:1.1rem;
        margin-top:5px;
      }

      .form-container-cache {
        display: none; /* Pour cacher le formulaire */
      } 

      .salaire {
        display: block;
        width: max-content; /* Pour qu'il garde sa largeur auto */
        margin: 0 auto;
        background-color: black;
        border-radius:20px;
        border : 1px solid var(--accent); 
        box-shadow: var(--ombre);
        padding: 10px;
        padding-left: 0.7rem;
        padding-right: 0.7rem;
        color:gold;
        font-weight: bold;
        font-size:0.8rem;
        margin-right:0%;
        margin-top:0.4em;
        margin-bottom:0;
      }

      p{
        margin-top:0.4em;
        margin-bottom:0.2em;
        margin-left:0%;
        font-size:0.9rem;
      }

      .salaire.paye {
        //- text-decoration: line-through;
        color: var(--vert);
      }

      /*li.user-item:not(:last-child)::after {
        content: "";
        display: block;
        width: 100%;
        border-radius:20px;
        border: 1px solid var(--accent2);
        height: 5px; 
        background-color: var(--accent2);
        margin-top: 1rem;
        border-radius: 1px;
      }*/

      
      .button-delete-task {
        padding: 5px;
        margin-left:10px;
        border: 2px solid black;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 0.9rem
      }

      .button-delete-task {
        background-color: var(--danger);
        color: white;
        box-shadow: var(--ombre);
        float:right;
        margin-top: 2px;
      }

      .button-delete-task:hover {
        background-color: #c0392b;
      }
       .button-add-ouvriers {
        padding: 5px;
        margin-left:10px;
        border: 2px solid black;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 0.9rem
      }

      .button-add-ouvriers {
        background-color: var(--fond);
        color: white;
        box-shadow: var(--ombre);
        float:right;
        margin-top: 2px;
      }

      .button-add-ouvriers:hover {
        background-color: var(--fond);
      }

      .button-modify-task {
        padding: 5px;
        border: 2px solid black;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 0.9rem;
      }

      .button-modify-task {
        background-color: var(--accent2);
        color: white;
        box-shadow: var(--ombre);
        float:right;
        margin-top: 2px;
      }

      .button-modify-task:hover {
        background-color: var(--accent);
        color: white;
      }

      .button-modify-task i {
        color: black;
        background-color: var(--accent2);
      }
      .button-modify-task i:hover {
        color: black;
        background-color: var(--accent);
      }

      .button-taxi {
        padding: 5px;
        border: 2px solid black;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 0.9rem
      }

      .button-taxi {
        background-color: var(--texte);
        color: white;
        box-shadow: var(--ombre);
        float:right;
        margin-top: 2px;
        margin-right : 0.6rem;
      }

      .button-taxi:hover {
        background-color: var(--accent);
        color: white;
      }

      .button-taxi i {
        color: black;
        background-color: var(--texte);
      }
      .button-taxi i:hover {
        color: black;
        background-color: var(--accent);
      }

      .button-historique {
        background-color: var(--accent2);
        color:black;
        box-shadow: var(--ombre);
      }

      .button-historique:hover {
        background-color: var(--accent2);
        color: black;
      }

      .button-reinitialze {
        display: block;             /* Permet d'utiliser margin auto */
        margin: 8px auto 0 auto;   /* Centré horizontalement + marge au-dessus */
        //- border: none;
        padding: 8px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        margin-bottom:8px;
        margin-left : 10px; /* Pour espacer les boutons */
      }

      .button-reinitialze {
        background-color: black;
        color:white;
        box-shadow: var(--ombre);
      }

      .button-reinitialze:hover {
        background-color: black;
        color: white;
      }

      .button-mois {
        display: block;             /* Permet d'utiliser margin auto */
        margin: 8px auto 0 auto;   /* Centré horizontalement + marge au-dessus */
        //- border: none;
        padding: 8px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 0.9rem;
        margin-bottom:8px;
        margin-left : 10px; /* Pour espacer les boutons */
      }

      .button-mois {
        background-color: var(--accent);
        color:black;
        box-shadow: var(--ombre);
      }

      .button-mois:hover {
        background-color: var(--accent);
        color: black;
      }

      .montanttotal{
        display: block;
        width: max-content;
        margin: 0 auto;
        background-color: black;
        border-radius: 20px;
        border: 1px solid var(--accent);
        box-shadow: var(--ombre);
        padding: 5px;
        padding-left: 0.7rem;
        padding-right: 0.7rem;
        color: gold;
        font-weight: bold;
        font-size: 1.5rem;
        margin: auto;
        margin-bottom: 0.4rem;
        margin-top: 0.4rem;
      }

      .task, .purchase-item {
        background-color: #1f1f2f;
        border-left: 10px solid var(--accent);
        border-top: 10px solid var(--accent);
        border-right: 1px solid var(--accent);
        border-bottom: 1px solid var(--accent);
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: var(--ombre);
      }

      .task h3, .purchase-item h3 {
        margin: 0 0 10px 0;
        color: var(--accent2);
      }

      .date {
        font-weight: bold;
        color: gold;
        margin-top: 5px;
        margin-bottom: 5px;
        text-align: center;
      }

      .nomTacheHeure {
        text-align: left;
        font-weight: bold;
        font-size: 1.1rem;
        color: var(--accent);
      }

      .nomQui, .nomTache {
        text-align: center;
        font-weight: bold;
        font-size: 1.1rem;
        color: var(--accent);
      }
      .nomTache {
        border : 2px solid var(--accent);
        background-color: #444;
        padding: 10px;
        border-radius: 10px;
        margin-right:2rem;
        margin-left:2rem;
      }
      .nomQui {
        margin-top: 20px;
        color: var(--text);
      }
      .qui{
        margin-bottom:10px;
      }

      .priority-qui-container {
        display: flex;
        justify-content: space-between;
        font-size: 1rem;
        color: var(--texte);
        margin-bottom: 10px;
      }
       .dateInput {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 0.5rem;
      }

      .dateInput input[type="date"],
      .dateInput select {
        background-color: #444;
        color: #f0f0f0;
        border: 2px solid var(--accent);
        border-radius: 6px;
        padding: 0.5rem;
        font-size: 0.9rem;
        font-family: 'Press Start 2P', monospace;
        margin-top:5px;
      }
      .dateInput input[type="month"]{
        background-color: #444;
        color: #f0f0f0;
        border: 2px solid var(--accent);
        border-radius: 6px;
        padding: 0.5rem;
        margin-top:5px;
        margin-left: 0px; /* a changer*/
        margin-right: 10px;
        font-size: 0.9rem;
        font-family: 'Press Start 2P', monospace;
      }

      .select-hours {
        background-color: #444;
        color: #f0f0f0;
        border: 2px solid var(--accent2);
        border-radius: 6px;
        padding: 0.5rem;
        margin-top:15px;
        margin-left: 0px; /* a changer*/
        margin-right: 10px;
        font-size: 0.9rem;
        font-family: 'Press Start 2P', monospace;
        width:40%
      }

      .select-add-user {
        background-color: #444;
        color: #f0f0f0;
        border: 2px solid var(--accent2);
        border-radius: 6px;
        padding: 0.5rem;
        margin-top:15px;
        margin-left: 0px; /* a changer*/
        margin-right: 10px;
        font-size: 0.9rem;
        font-family: 'Press Start 2P', monospace;
        width:60%
      }

      .small-br {
        border-radius:20px;
        border: 1px solid var(--accent2);
        background-color: var(--accent2);
        line-height: 0.5;  /* réduit l'espace vertical */
        content: "";       /* pas obligatoire mais parfois utile */
        margin: 2px 0;     /* tu peux ajuster la marge aussi */
        display: block;    /* forcer le saut en bloc */
        height: 2px;       /* hauteur personnalisée */
      }

      .heureTravail {
        background-color: var(--accent2);
        font-weight: bold;
        color: black;
        margin-top: 20px;
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 10px;
        text-align: center;
      }
      .historique {
        display: none
      }
      .input-task {
        margin-top:15px;
        width: 70%; /* ou 300px, ou 20rem selon ce que tu préfères */
      }
      .input-task2 {
        margin-top:15px;
        width: 90%; /* ou 300px, ou 20rem selon ce que tu préfères */
      }

      .separation{
        text-align:center;
        margin:auto;
        margin-top:0; 
        margin-bottom:0;
        padding-top:0;
        padding-bottom:0;
      }
      li .item {
        background-color:rgb(116, 116, 119);
        font-size:0.85rem;
        border : 2px solid white;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 25px;
        box-shadow: var(--ombre);
        color:white;
        //- font-weight: bold;
        //- font-size : 1rem;
        position: relative;
        white-space: normal;  /* Permet au texte de passer à la ligne */
        word-wrap: break-word; /* Coupe les mots trop longs pour éviter le débordement */
        overflow-wrap: break-word; /* Compatibilité moderne */

          
      }
      .montantCentrer {
        text-align:center;
        font-size:1.2rem;
        margin-bottom: 0rem;
      }

      li.user-item {
        list-style-type: none;
        //- background-color: #444;
        color: #f0f0f0;
        border-bottom: 2px solid var(--accent);
        //- border-radius: 6px;
        padding: 0.5rem;
        padding-top:0.2rem;
        margin-top:0px;
        margin-left: 0px; /* a changer*/
        margin-right: 00px;
        font-size: 1rem;
        padding-bottom:20px;
        font-family: 'Press Start 2P', monospace;
      }

      .iconBurger{
        height:1rem;
        position : absolute;
        margin-left : 0.4rem;
        margin-top : 0.1rem;
      }

      .boutonFiltre-reinitialise {
        display: flex;
        justify-content: space-between;
        margin-top:0rem;
      }

      ul.task-list {
        list-style-type: none;
        padding-left: 0;
      }
      p.item-text {
        font-size: 1rem;
        color: var(--texte);
        margin-bottom: 5px;
        margin-top: 5px;
        text-align:center;
      }

      .historique {
        display: none;
        margin-bottom: 20px;
      }

      .input-taxi-price{
        margin-top:0.5rem;
        width:40%;
        font-size:0.9rem;
      }
      .espaceHistorique{
        margin-bottom:10px;
      }
      .SalaireEtNbreChantiers{
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .salaireEtValidationPaye{
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .atelier20Point12 img{
        position: absolute;
        left: -11.5%;
        top: 1.1rem;             /* au milieu vertical */
        transform: translateY(-20%);
        //- height: 1.3rem;   !important;   
        width:2.3rem;
        border-radius: 10px;
        border:1px solid var(--texte);
      }

      /* Priorités */
      .faible {
        border-left-color: green;
      }

      .moyenne {
        border-left-color: orange;
      }

      .haute {
        border-left-color: red;
      }
      #username {
        margin-bottom:0px;
        margin-top:0px;
      }

      .buttonSalairePaye{
        padding: 8px;
        border: 2px solid black;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 0.9rem;
        background-color: var(--danger);
        color: black;
        box-shadow: var(--ombre);
        //- float:right;
        margin-top: 15px;
      }
      .buttonSalairePaye.paye {
        //- text-decoration: line-through;
        background-color: var(--vert);;
      }
      #mois {
        margin-top:0px;
        font-size:0.9rem;
      }
      #username {
        margin-top:12px;
        font-size:0.9rem;
      }

      /* Responsive */
      @media (max-width: 1600px) {
        .container {
          flex-direction: column;
        }
      }

  body
    .container
      .form-container-cache 
        .head
          //- .formDate
          //-   .date-time
          //-     #dateJour 
          //-     #heure    
 
        include includes/title.pug 
        p.sousTitre Historique des ouvriers
         div.small-br

        form(action="/historiqueOuvrier" method="POST")
          label(for="username") Filtres (Ouvrier et Mois) :
          //- input(type="text" name="username" placeholder="Nom utilisateur")
          //- .boutonFiltre-reinitialise

          //- .dateInput
          //-   select(name="username" id="username")
          //-     option(value="" disabled selected) Nom de l'ouvrier
          //-     each user in usersAdmin
          //-       if user.isAdmin != "y"
          //-         option(value=user.username)= user.username
  
          .dateInput
            input(type="month" name="mois" id="mois" placeholder="Mois")      

          .boutonFiltre-reinitialise
            button(type="submit" class="button-historique") Filtrer
            a(href="/historiqueOuvrier") 
              button(type="button" class="button-mois") 
            a(href="/historiqueOuvrierAll") 
              button(type="button" class="button-reinitialze") Réinitialiser
          div.small-br
          - var montantTotalGeneral = 0
          h2.montantCentrer Montant total général : #{montantTotalGeneral} €
          div.small-br

        // Si la liste est vide
        if !usersAdmin || usersAdmin.length === 0
          p Aucun ouvrier trouvé.
         
        user-list
          each user in usersAdmin
            if user.username != "Admin"
              li.user-item
                //- p Taux horaire actuel : #{user.taux} €/h
                if user.tasks && user.tasks.length
                  - var totalMontant = 0
                  each t in user.tasks
                    - totalMontant += Number(t.montant) || 0
                  - montantTotalGeneral += totalMontant  
                  h2 #{user.username} (#{user.taux} €/h)
                  p.salaire : #{totalMontant} €
                  p Chantiers : #{user.tasks.length}
                  ul.task-list
                    each t in user.tasks
                      - const dateObj = new Date(t.date)
                      - const dateFr = dateObj.toLocaleDateString('fr-FR', { day: 'numeric', month: 'long', year: 'numeric' })
                      li.item(data-task-id=t._id.toString())
                        | #{t.name || t.task} (#{dateFr})
                        p.item-text #{t.montant} €  ➭ : #{t.heureTravail} h  (#{t.taux} €/h)
                        button(type="button" onclick="deleteTask(this)" class="button-delete-task")
                          i(class="fas fa-trash-alt")
                          //- |  Accueil
                      //- br.small-br
        
        form(action="/admin" method="get")
          button(type="submit" class="button-historique")
            i(class="fas fa-home")
            |  Accueil               
        form(action="/logout" method="get")
          button(type="submit" class="button-logout")
            i(class="fas fa-sign-out-alt")
            |  Déconnexion           
      .form-container 
        .head
          .formDate
            .date-time
              #dateJour  
              br
              #heure    
 
        p.titre Skil Up 
        p.sousTitre Historique des ouvriers

        form(action="/historiqueOuvrier" method="POST")
          button.button-historique(type="button" id="toggleHistorique") Filtres
          div.historique(id="historique")
            label(for="username") Filtres (Ouvrier et/ou Mois) :
            
            //- input(type="text" name="username" placeholder="Nom utilisateur")
            //- .boutonFiltre-reinitialise

            .dateInput
              select(name="username" id="username")
                option(value="" disabled selected) Nom de l'ouvrier
                each user in usersAdmin
                  if user.isAdmin !="y"
                    option(value=user.username)= user.username
    
            .dateInput
              input(type="month" name="mois" id="mois" placeholder="Mois")      

            .boutonFiltre-reinitialise
              button(type="submit" class="button-historique") Valider
              a(href="/historiqueOuvrier") 
                button(type="button" class="button-mois") Ce mois
              a(href="/historiqueOuvrierAll") 
                button(type="button" class="button-reinitialze") Tout
          div.small-br
          h2.montantCentrer Total des salaires :
          h2.montantTotal  #{montantTotalGeneral} €
          div.small-br

        // Si la liste est vide
        if !usersAdmin || usersAdmin.length === 0
          p Aucun ouvrier trouvé.
         
        user-list
          each user in usersAdmin
            if user.username != "Admin"
              if user.tasks
                li.user-item
                  //- p Taux horaire actuel : #{user.taux} €/h
                  if user.tasks && user.tasks.length
                    - var totalMontant = 0
                    each t in user.tasks
                      - totalMontant += Number(t.montant) || 0
                    - montantTotalGeneral += totalMontant  
                    h2 #{user.username} (#{user.taux} €/h)
                    .SalaireEtNbreChantiers
                      if user.tasks.length === 0
                        p Aucun chantier
                      else if user.tasks.length === 1
                        p Chantier : #{user.tasks.length}
                      else
                        p Chantiers : #{user.tasks.length} 
                      p.salaire Salaire : #{totalMontant} €
                        //- button.buttonSalairePaye(type="button" class="salairePayeBtn" onclick="salairePaye(this)") A payer
                       
                    ul.task-list
                      each t in user.tasks
                        - const dateObj = new Date(t.date)
                        //- - const dateFr = dateObj.toLocaleDateString('fr-FR', { day: 'numeric', month: 'long', year: 'numeric' })
                        - const dateFr = dateObj.toLocaleDateString('fr-FR', { day: 'numeric', month: 'numeric', year: 'numeric' })
                        if t.qui
                          li.item(data-task-id=t._id.toString())
                            if t.repas==="on"
                              | - Chantier : #{t.name || t.task}
                              br.espaceHistorique
                              | - Le #{dateFr} 
                              br.espaceHistorique
                              | - #{t.heure} à #{t.heuref} (off: #{t.pause}h) +
                              img(src="./assets/icons/burger.png" alt="Image description" class="iconBurger")

                              br.espaceHistorique
                              | - Chef : #{t.qui}
                              if t.atelier20Point12 === "on"
                                div.atelier20Point12 
                                  img(src="./assets/icons/logo_20Point12.png"  alt="skilUp")
                              if t.skilUp === "on"
                                div.atelier20Point12 
                                  img(src="./assets/icons/logo_arrondi_V1/icon192.png "  alt="skilUp") 

                            else 
                              | - Chantier :  #{t.name || t.task} 
                              br.espaceHistorique
                              | - Le #{dateFr} 
                              br.espaceHistorique
                              | - #{t.heure} à #{t.heuref} (off: #{t.pause}h)
                              br.espaceHistorique
                              | - Chef : #{t.qui} 
                              if t.atelier20Point12 === "on"
                                div.atelier20Point12 
                                  img(src="./assets/icons/logo_20Point12.png" alt="20.12")
                              if t.skilUp === "on"
                                div.atelier20Point12 
                                  img(src="./assets/icons/logo_arrondi_V1/icon192.png "  alt="skilUp")     
                            p.separation .............
                            if t.taxiRefund && t.taxiRefund > 0
                              p.item-text #{t.montant} €  ➭ : #{t.heureTravail} h  (#{t.taux} €/h) + taxi : #{t.taxiRefund} €
                            else  
                              p.item-text #{t.montant} €  ➭ : #{t.heureTravail} h  (#{t.taux} €/h)
                            button(type="button" onclick="deleteTask(this)" class="button-delete-task")
                              i(class="fas fa-trash-alt")
                            
                            // Bouton Ajouter ouvrier
                            button.button-add-ouvriers(
                              type="button" 
                              data-task-id=t._id
                              onclick="addUsers(this)"
                            )
                              i.fas.fa-users

                            // Select pour choisir l’ouvrier, avec data-task-id
                            select.select-add-user(style="display:none" data-task-id=t._id)
                              option(value="") Ouvrier
                              each ouvrier in allUsers
                                if ouvrier.isAdmin != "y"
                                  option(value=ouvrier._id)= ouvrier.username
                            button(type="button" onclick="modifyTaskHours(this)" class="button-modify-task")
                              i(class="fas fa-pencil-alt") 
                            select.select-hours(style="display:none")
                              option Heures
                              option(value="0") 0
                              option(value="1") 1
                              option(value="2") 2
                              option(value="3") 3
                              option(value="4") 4
                              option(value="5") 5
                              option(value="6") 6
                              option(value="7") 7
                              option(value="8") 8
                              option(value="9") 9
                              option(value="10") 10
                              option(value="11") 11  
                              option(value="12") 12
                              option(value="13") 13 
                              option(value="14") 14 
                              option(value="15") 15 
                              option(value="16") 16 
                              option(value="17") 17 
                              option(value="18") 18
                            button(type="button" onclick="modifyTaxiRefund(this)" class="button-taxi")
                              i(class="fas fa-taxi")
                            input.input-taxi-price(type="number" step="0.01" placeholder="Prix (€)" style="display:none")
                                  
                            //- div(class="item" data-task-id=task._id)
                            //-   .heureTravail
                            //-     span.heures #{task.heureTravail}h
                            //-   select.select-hours(style="display:none;")
                            //-     each heure in [1,2,3,4,5,6,7,8,9,10,11,12]
                            //-       option(value=heure) #{heure}h
                            //-   button(type="button" onclick="modifyTaskHours(this)" class="button-modify-task")
                            //-     i(class="fas fa-pencil-alt") 
                        else    
                          li.item(data-task-id=t._id.toString())
                            if t.repas==="on"
                              | - Chantier : #{t.name || t.task}
                              |- Le #{dateFr}
                              br.espaceHistorique
                              | #{t.heure} à #{t.heuref} (off: #{t.pause}h) +
                              img(src="./assets/icons/burger.png" alt="Image description")
                              |
                              br.espaceHistorique
                              | - Chef : #{t.qui}
                            
                              if t.atelier20Point12 === "on"
                                div.atelier20Point12 
                                  img(src="./assets/icons/logo_20Point12.png"  alt="20.12")
                              if t.skilUp === "on"
                                div.atelier20Point12 
                                  img(src="./assets/icons/logo_arrondi_V1/icon192.png "  alt="skilUp")     
                              
                            else 
                              | -Chantiert#{t.name || t.task}
                              br.espaceHistorique   
                              | - Le #{dateFr}
                              br.espaceHistorique
                              | #{t.heure} à #{t.heuref}(off: #{t.pause}h)
                              br.espaceHistorique
                              | - Chef : #{t.qui}
                              if t.atelier20Point12 === "on"
                                div.atelier20Point12 Atelier 20.12 
                                  img(src="./assets/icons/logo_20Point12.png" alt="20.12")
                              if t.skilUp === "on"
                                div.atelier20Point12 
                                  img(src="./assets/icons/logo_arrondi_V1/icon192.png "  alt="skilUp")     
                            p.separation .............
                            if t.taxiRefund && t.taxiRefund > 0
                              p.item-text #{t.montant} €  ➭ : #{t.heureTravail} h  (#{t.taux} €/h) + taxi : #{t.taxiRefund} €
                            else  
                              p.item-text #{t.montant} €  ➭ : #{t.heureTravail} h  (#{t.taux} €/h)
                            button(type="button" onclick="deleteTask(this)" class="button-delete-task")
                              i(class="fas fa-trash-alt")
                            // Bouton Ajouter ouvrier
                            button.button-add-ouvriers(
                              type="button" 
                              data-task-id=t._id
                              onclick="addUsers(this)"
                            )
                              i.fas.fa-users

                            // Select pour choisir l’ouvrier, avec data-task-id
                            select.select-add-user(style="display:none" data-task-id=t._id)
                              option(value="") -- Ajouter un ouvrier --
                              each ouvrier in allUsers
                                if ouvrier.isAdmin != "y"
                                  option(value=ouvrier._id)= ouvrier.username 
                            button(type="button" onclick="modifyTaskHours(this)" class="button-modify-task")
                              i(class="fas fa-pencil-alt") 
                            select.select-hours(style="display:none")
                              option Heures
                              option(value="1") 1
                              option(value="2") 2
                              option(value="3") 3
                              option(value="4") 4
                              option(value="5") 5
                              option(value="6") 6
                              option(value="7") 7
                              option(value="8") 8
                              option(value="9") 9
                              option(value="10") 10
                              option(value="11") 11  
                              option(value="12") 12
                              option(value="13") 13 
                              option(value="14") 14 
                              option(value="15") 15 
                              option(value="16") 16 
                              option(value="17") 17 
                              option(value="18") 18  
                            button(type="button" onclick="modifyTaxiRefund(this)" class="button-taxi")
                              i(class="fas fa-taxi")
                            input.input-taxi-price(type="number" step="0.01" placeholder="Prix (€)" style="display:none") 
                            //- div(class="item" data-task-id=task._id)
                            //-   .heureTravail
                            //-     span.heures #{task.heureTravail}h
                            //-   select.select-hours(style="display:none;")
                            //-     each heure in [1,2,3,4,5,6,7,8,9,10,11,12]
                            //-       option(value=heure) #{heure}h
                            //-   button(type="button" onclick="modifyTaskHours(this)" class="button-modify-task")
                            //-     i(class="fas fa-pencil-alt")
                          //- |  Accueil
                      //- br.small-br
        form(action="/admin" method="get")
          button(type="submit" class="button-historique")
            i(class="fas fa-home")
            |  Accueil               
        //- form(action="/logout" method="get")
        //-   button(type="submit" class="button-logout")
        //-     i(class="fas fa-sign-out-alt")
        //-     |  Déconnexion  
        include includes/logout.pug
        include includes/acceuil.pug
        //- footer
        //-   .footer-content
        //-     p Skil Up © — Tous droits réservés — 2025
        include includes/footer.pug              
    
    script(src="/js/script.js")
    script.
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', function() {
          navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
            console.log('ServiceWorker registration successful with scope: ', registration.scope);
          }, function(err) {
            console.log('ServiceWorker registration failed: ', err);
          });
        });
      }
