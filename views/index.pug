html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Skil Up
    link(rel="manifest" href="/manifest.json")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    style.
      :root {
        --fond: #1e1e2f;
        --carte: #2c2c3a;
        --texte: #f0f0f0;
        --accent:rgb(182, 186, 185); /*--accent: #8a2be2; */
        --accent2: #00ffff; /* cyan */
        --danger: #e74c3c;
        --ombre: 0 0 1px rgba(0, 0, 0, 0.3);
      }
      .head {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      body {
        background-color: var(--fond);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--texte);
        margin: 0;
        padding: 20px;
        display: flex;
        justify-content: center;
      }

      .container {
        display: flex;
        flex-direction: row;
        max-width: 1600px;
        gap: 30px;
        width: 100%;
      }

      .form-container, .tasks-container, .purchase-container {
        background-color: var(--carte);
        border-radius: 15px;
        box-shadow: var(--ombre);
        padding: 20px;
        flex: 1;
      }

      .tasks-container {
        overflow: visible;
      }

      .salaire {
        background-color: black;
        border-radius:20px;
        border : 1px solid var(--accent); 
        box-shadow: var(--ombre);
        padding: 10px;
        padding-left: 0.7rem;
        padding-right: 0.7rem;
        color:gold;
        font-weight: bold;
        font-size:1rem;
      }

      .titre {
        text-align: center;
        font-size: 3rem;
        color: var(--accent2);
        font-family: 'Orbitron', sans-serif;
        text-shadow: 0 0 5px var(--accent2);
        margin-top:1rem;
        margin-bottom: 1rem;
      }

      form {
        display: flex;
        flex-direction: column;
        gap: 5px;
      }

      label {
        font-weight: bold;
        color: var(--accent2);
        MARGIN-BOTTOM: 5px;
      }

      input, textarea {
        background-color: #444;
        color: var(--texte);
        border: 2px solid var(--accent);
        border-radius: 8px;
        padding: 10px;
        font-size: 1rem;
        transition: border 0.3s ease;
      }

      input:focus, textarea:focus {
        outline: none;
        border-color: var(--accent2);
      }

      .button-submit-taches, .button-delete {
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 1rem;
        margin-top: 10px;
      }

      .button-submit-taches {
        background-color: var(--accent2);
        color: black;
        box-shadow: var(--ombre);
      }

      .button-submit-taches:hover {
        background-color: var(--accent);
        color: #000;
      }

      .button-historique {
        display: block;             /* Permet d'utiliser margin auto */
        margin: 10px auto 5 auto;   /* Centré horizontalement + marge au-dessus */
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 1rem;
      }

      .button-historique {
        background-color: var(--accent2);
        color:black;
        box-shadow: var(--ombre);
      }

      .button-historique:hover {
        background-color: var(--accent2);
        color: black;
      }

      .button-delete {
        background-color: var(--danger);
        color: white;
        box-shadow: var(--ombre);
      }

      .button-delete:hover {
        background-color: #c0392b;
      }

      .task, .purchase-item {
        background-color: #1f1f2f;
        border-left: 10px solid var(--accent);
        border-top: 10px solid var(--accent);
        border-right: 1px solid var(--accent);
        border-bottom: 1px solid var(--accent);
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: var(--ombre);
      }

      .task h3, .purchase-item h3 {
        margin: 0 0 10px 0;
        color: var(--accent2);
      }

      .date {
        font-weight: bold;
        color: gold;
        margin-top: 5px;
        margin-bottom: 5px;
        text-align: center;
      }

      .button-reinitialze {
        display: block;             /* Permet d'utiliser margin auto */
        margin: 10px auto 0 auto;   /* Centré horizontalement + marge au-dessus */
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 1rem;
        margin-bottom:25px;
      }

      .button-reinitialze {
        background-color: var(--accent);
        color:black;
        box-shadow: var(--ombre);
      }

      .button-reinitialze:hover {
        background-color: var(--accent);
        color: black;
      }

      .button-filter {
        display: block;             /* Permet d'utiliser margin auto */
        margin: 10px auto 0 auto;   /* Centré horizontalement + marge au-dessus */
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 1rem;
        margin-bottom:25px;
      }

      .button-filter {
        background-color: var(--accent2);
        color:black;
        box-shadow: var(--ombre);
      }

      .button-filter:hover {
        background-color: var(--accent);
        color: black;
      }

      .nomTacheHeure {
        text-align: left;
        font-weight: bold;
        font-size: 1.1rem;
        color: var(--accent);
      }

      .nomQui, .nomTache {
        text-align: center;
        font-weight: bold;
        font-size: 1.1rem;
        color: var(--accent);
      }
      .nomTache {
        border : 2px solid var(--accent);
        background-color: #444;
        padding: 10px;
        border-radius: 10px;
        margin-right:2rem;
        margin-left:2rem;
      }
      .nomQui {
        margin-top: 20px;
        color: var(--text);
      }

      .priority-qui-container {
        display: flex;
        justify-content: space-between;
        font-size: 1rem;
        color: var(--texte);
        margin-bottom: 10px;
      }
       .dateInput {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
      }

      .dateInput input[type="date"],
      .dateInput select {
        background-color: #444;
        color: #f0f0f0;
        border: 2px solid var(--accent);
        border-radius: 6px;
        padding: 0.5rem;
        font-size: 1rem;
        font-family: 'Press Start 2P', monospace;
      }

      br.small-br {
        line-height: 0.7;  /* réduit l'espace vertical */
        content: "";       /* pas obligatoire mais parfois utile */
        margin: 2px 0;     /* tu peux ajuster la marge aussi */
        display: block;    /* forcer le saut en bloc */
        height: 6px;       /* hauteur personnalisée */
      }

      .dateInput input[type="month"]{
        background-color: #444;
        color: #f0f0f0;
        border: 2px solid var(--accent);
        border-radius: 6px;
        padding: 0.5rem;
        margin-top:15px;
        margin-left: 0px; /* a changer*/
        margin-right: 10px;
        font-size: 1rem;
        font-family: 'Press Start 2P', monospace;
      }

      .heureTravail {
        background-color: var(--accent2);
        font-weight: bold;
        color: black;
        margin-top: 20px;
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 10px;
        text-align: center;
      }
      .heureTravail p {
        margin-top: 0px;
        margin-bottom: 0px;
      }
            .historique {
        display: none
      }
      .boutonFiltre-reinitialise {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
      }
      .input-task {
        width: 70%; /* ou 300px, ou 20rem selon ce que tu préfères */
      }

      /* Priorités */
      .faible {
        border-left-color: green;
      }

      .moyenne {
        border-left-color: orange;
      }

      .haute {
        border-left-color: red;
      }

      /* Responsive */
      @media (max-width: 768px) {
        .container {
          flex-direction: column;
        }
      }

  body
    .container
      .form-container 
        .head
          .formDate
            .date-time
              #dateJour 
              #heure 
          .formDate
            .date-time
              p.salaire Salaire : #{salaire} €   
 
        
        

      //-   form(action="/" method="post")
      //-     label(for="task") Mission et heures de pauses:
      //-     .dateInput
      //-       input(type="text" id="task" name="task" class ="input-task" required)
      //-       //- input(type="number" id="taux" name="taux")
      //-       select(id="pause" name="pause")
      //-         option(value="0") 0h
      //-         option(value="1") 1h
      //-         option(value="2") 2h
      //-     //- input(type="text" id="task" name="task" required)
          

      //-     label(for="qui" class="qui") Chef de mission :
      //-     .dateInput
      //-       input(type="text" id="qui" name="qui" class ="input-task" required)
      //-       //- input(type="number" id="taux" name="taux")
      //-       select(id="taux" name="taux")
      //-         option(value="10") 10€/h
      //-         option(value="12") 12€/h
      //-         option(value="13") 13€/h
      //-         option(value="14") 14€/h
      //-         option(value="15") 15€/h
      //-         option(value="16") 16€/h
           
      //-     br.small-br
      //-     label(for="date") Début (Date et heure) :
      //-     .dateInput
      //-       input(type="date" id="date" name="date" class ="input-task")
      //-       select(id="heure" name="heure")
      //-         option(value="00:00") 00h
      //-         option(value="01:00") 01h
      //-         option(value="02:00") 02h
      //-         option(value="03:00") 03h
      //-         option(value="04:00") 04h
      //-         option(value="05:00") 05h
      //-         option(value="06:00") 06h
      //-         option(value="07:00") 07h
      //-         option(value="08:00") 08h
      //-         option(value="09:00") 09h
      //-         option(value="10:00") 10h
      //-         option(value="11:00") 11h
      //-         option(value="12:00") 12h
      //-         option(value="13:00") 13h
      //-         option(value="14:00") 14h
      //-         option(value="15:00") 15h
      //-         option(value="16:00") 16h
      //-         option(value="17:00") 17h
      //-         option(value="18:00") 18h
      //-         option(value="19:00") 19h
      //-         option(value="20:00") 20h
      //-         option(value="21:00") 21h
      //-         option(value="22:00") 22h
      //-         option(value="23:00") 23h     

      //-     label(for="datef") Fin (Date et heure) :
      //-     .dateInput
      //-       input(type="date" id="datef" name="datef" class ="input-task")
      //-       select(id="heuref" name="heuref")
      //-         option(value="00:00") 00h
      //-         option(value="01:00") 01h
      //-         option(value="02:00") 02h
      //-         option(value="03:00") 03h
      //-         option(value="04:00") 04h
      //-         option(value="05:00") 05h
      //-         option(value="06:00") 06h
      //-         option(value="07:00") 07h
      //-         option(value="08:00") 08h
      //-         option(value="09:00") 09h
      //-         option(value="10:00") 10h
      //-         option(value="11:00") 11h
      //-         option(value="12:00") 12h
      //-         option(value="13:00") 13h
      //-         option(value="14:00") 14h
      //-         option(value="15:00") 15h
      //-         option(value="16:00") 16h
      //-         option(value="17:00") 17h
      //-         option(value="18:00") 18h
      //-         option(value="19:00") 19h
      //-         option(value="20:00") 20h
      //-         option(value="21:00") 21h
      //-         option(value="22:00") 22h
      //-         option(value="23:00") 23h
          
      //-     //- label(for="description") Commentaires :
      //-     //- textarea(id="description" name="description" rows="1" )
      //-     button(type="submit" class="button-submit-taches") Ajouter
          
          
       
      .tasks-container
        p.titre Skil Up
        // Bouton pour afficher/masquer l'historique
        button.button-historique(type="button" id="toggleHistorique") Historique

        // Bloc historique masqué par défaut
        div.historique(id="historique")
        form(action="/historiqueUser" method="POST")
          label(for="mois") Mois :
          .dateInput
            input(type="month" name="mois" id="mois" placeholder="Mois")
          .boutonFiltre-reinitialise
            button(type="submit" class="button-filter") Filtrer
            button(type="button" id="btnMois" class="button-reinitialze") Ce mois
            button(type="button" id="btnReset" class="button-reinitialze") Tout
        //- if message
        //-     #message.message #{message}
        // Liste des tâches
        each task in tasks
          .task(data-task-id=task._id class=task.priority)
            .task-header
              h3.nomTache #{task.task} 
              if task.qui && task.qui.trim() !== ''
                div.nomQui
                  p Chef d'équipe : #{task.qui}
              p.nomTacheHeure Début de mission :
              .dateFormat 
                p.date #{new Intl.DateTimeFormat('fr-FR', { day: 'numeric', month: 'long', year: 'numeric'}).format(new Date(task.date))} - #{task.heure}
              p.nomTacheHeure Fin de mission :
              .dateFormat     
                p.date #{new Intl.DateTimeFormat('fr-FR', { day: 'numeric', month: 'long', year: 'numeric'}).format(new Date(task.datef))} - #{task.heuref}
              if task.description
                p.taskDescription Commentaires : #{task.description}
              .heureTravail
                p #{task.montant}€ : #{task.heureTravail}h (#{task.taux}€/h - #{task.pause}h de pause)

                  //- button(type="button" onclick="deleteTask(this)" class="button-delete") Supprimer
      
      //- form(action="/logout" method="get")
      //-   button(type="submit" class="button-delete") Déconnexion
      form(action="/logout" method="get")
          button(type="submit" class="button-delete")
            i(class="fas fa-sign-out-alt")
            |  Déconnexion
    script(src="/js/script.js")
    script.
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', function() {
          navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
            console.log('ServiceWorker registration successful with scope: ', registration.scope);
          }, function(err) {
            console.log('ServiceWorker registration failed: ', err);
          });
        });
      }
