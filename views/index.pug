html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Tâches du jour
    link(rel="manifest" href="/manifest.json")
    style.
      :root {
        --fond: #1e1e2f;
        --carte: #2c2c3a;
        --texte: #f0f0f0;
        --accent: #8a2be2; /* violet */
        --accent2: #00ffff; /* cyan */
        --danger: #e74c3c;
        --ombre: 0 0 10px rgba(0, 0, 0, 0.7);
      }
      .head {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      body {
        background-color: var(--fond);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--texte);
        margin: 0;
        padding: 20px;
        display: flex;
        justify-content: center;
      }

      .container {
        display: flex;
        flex-direction: row;
        max-width: 1600px;
        gap: 30px;
        width: 100%;
      }

      .form-container, .tasks-container, .purchase-container {
        background-color: var(--carte);
        border-radius: 15px;
        box-shadow: var(--ombre);
        padding: 20px;
        flex: 1;
      }

      .titre {
        text-align: center;
        font-size: 3rem;
        color: var(--accent2);
        font-family: 'Orbitron', sans-serif;
        text-shadow: 0 0 5px var(--accent2);
      }

      form {
        display: flex;
        flex-direction: column;
        gap: 10px;
      }

      label {
        font-weight: bold;
        color: var(--accent2);
      }

      input, textarea {
        background-color: #444;
        color: var(--texte);
        border: 2px solid var(--accent);
        border-radius: 8px;
        padding: 10px;
        font-size: 1rem;
        transition: border 0.3s ease;
      }

      input:focus, textarea:focus {
        outline: none;
        border-color: var(--accent2);
      }

      .button-submit-taches, .button-delete {
        border: none;
        padding: 12px;
        border-radius: 8px;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
        font-size: 1rem;
        margin-top: 10px;
      }

      .button-submit-taches {
        background-color: var(--accent);
        color: white;
        box-shadow: var(--ombre);
      }

      .button-submit-taches:hover {
        background-color: var(--accent2);
        color: #000;
      }

      .button-delete {
        background-color: var(--danger);
        color: white;
        box-shadow: var(--ombre);
      }

      .button-delete:hover {
        background-color: #c0392b;
      }

      .task, .purchase-item {
        background-color: #1f1f2f;
        border-left: 10px solid var(--accent);
        border-top: 10px solid var(--accent);
        border-right: 1px solid var(--accent);
        border-bottom: 1px solid var(--accent);
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        box-shadow: var(--ombre);
      }

      .task h3, .purchase-item h3 {
        margin: 0 0 10px 0;
        color: var(--accent2);
      }

      .date {
        font-weight: bold;
        color: gold;
        margin-top: 5px;
        margin-bottom: 5px;
        text-align: center;
      }

      .nomTacheHeure {
        text-align: left;
        font-weight: bold;
        font-size: 1.1rem;
        color: var(--accent);
      }

      .nomQui, .nomTache {
        text-align: center;
        font-weight: bold;
        font-size: 1.1rem;
        color: var(--accent);
      }
      .nomQui {
        margin-top: 20px;
        color: var(--text);
      }

      .priority-qui-container {
        display: flex;
        justify-content: space-between;
        font-size: 1rem;
        color: var(--texte);
        margin-bottom: 10px;
      }
       .dateInput {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
      }

      .dateInput input[type="date"],
      .dateInput select {
        background-color: #444;
        color: #f0f0f0;
        border: 2px solid var(--accent);
        border-radius: 6px;
        padding: 0.5rem;
        font-size: 1rem;
        font-family: 'Press Start 2P', monospace;
      }

      .heureTravail {
        background-color: var(--accent2);
        font-weight: bold;
        color: black;
        margin-top: 20px;
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 10px;
        text-align: center;
      }

      .input-task {
        width: 70%; /* ou 300px, ou 20rem selon ce que tu préfères */
      }

      /* Priorités */
      .faible {
        border-left-color: green;
      }

      .moyenne {
        border-left-color: orange;
      }

      .haute {
        border-left-color: red;
      }

      /* Responsive */
      @media (max-width: 768px) {
        .container {
          flex-direction: column;
        }
      }

  body
    .container
      .form-container 
        .head
          .formDate
            .date-time
              #dateJour 
              #heure 
          .formDate
            .date-time
              p Salaire 1000 €   
 
        p.titre Skill Up
        

        form(action="/" method="post")
          label(for="task") Tâches :
          //- input(type="text" id="task" name="task" required)
          .dateInput
            input(type="text" id="task" name="task" class ="input-task" required)
            //- input(type="number" id="taux" name="taux")
            select(id="taux" name="taux")
              option(value="10") 10€/h
              option(value="12") 12€/h
              option(value="13") 13€/h
              option(value="14") 14€/h
              option(value="15") 15€/h
              option(value="16") 16€/h

          
          label(for="date") Date et Heure début:
          .dateInput
            input(type="date" id="date" name="date" class ="input-task")
            select(id="heure" name="heure")
              option(value="00:00") 00h
              option(value="01:00") 01h
              option(value="02:00") 02h
              option(value="03:00") 03h
              option(value="04:00") 04h
              option(value="05:00") 05h
              option(value="06:00") 06h
              option(value="07:00") 07h
              option(value="08:00") 08h
              option(value="09:00") 09h
              option(value="10:00") 10h
              option(value="11:00") 11h
              option(value="12:00") 12h
              option(value="13:00") 13h
              option(value="14:00") 14h
              option(value="15:00") 15h
              option(value="16:00") 16h
              option(value="17:00") 17h
              option(value="18:00") 18h
              option(value="19:00") 19h
              option(value="20:00") 20h
              option(value="21:00") 21h
              option(value="22:00") 22h
              option(value="23:00") 23h

          //- label(for="dateOnly") Date :
          //- input(type="date" id="dateOnly" name="dateOnly")

          //- label(for="heure") Heure :
          //-   select(id="heure" name="heure")
          //-     option(value="00:00") 00h
          //-     option(value="01:00") 01h
          //-     option(value="02:00") 02h
          //-     option(value="03:00") 03h
          //-     option(value="04:00") 04h
          //-     option(value="05:00") 05h
          //-     option(value="06:00") 06h
          //-     option(value="07:00") 07h
          //-     option(value="08:00") 08h
          //-     option(value="09:00") 09h
          //-     option(value="10:00") 10h
          //-     option(value="11:00") 11h
          //-     option(value="12:00") 12h
          //-     option(value="13:00") 13h
          //-     option(value="14:00") 14h
          //-     option(value="15:00") 15h
          //-     option(value="16:00") 16h
          //-     option(value="17:00") 17h
          //-     option(value="18:00") 18h
          //-     option(value="19:00") 19h
          //-     option(value="20:00") 20h
          //-     option(value="21:00") 21h
          //-     option(value="22:00") 22h
          //-     option(value="23:00") 23h

          label(for="datef") Date et heure de fin :
          .dateInput
            input(type="date" id="datef" name="datef" class ="input-task")
            select(id="heuref" name="heuref")
              option(value="00:00") 00h
              option(value="01:00") 01h
              option(value="02:00") 02h
              option(value="03:00") 03h
              option(value="04:00") 04h
              option(value="05:00") 05h
              option(value="06:00") 06h
              option(value="07:00") 07h
              option(value="08:00") 08h
              option(value="09:00") 09h
              option(value="10:00") 10h
              option(value="11:00") 11h
              option(value="12:00") 12h
              option(value="13:00") 13h
              option(value="14:00") 14h
              option(value="15:00") 15h
              option(value="16:00") 16h
              option(value="17:00") 17h
              option(value="18:00") 18h
              option(value="19:00") 19h
              option(value="20:00") 20h
              option(value="21:00") 21h
              option(value="22:00") 22h
              option(value="23:00") 23h
          
          label(for="description") Descriptions :
          textarea(id="description" name="description" rows="1")

          label(for="qui" class="qui") Chef de mission
          textarea(id="qui" name="qui" rows="1") 

          button(type="submit" class="button-submit-taches") Ajouter
          

      .tasks-container
        each task in tasks
          .task(data-task-id=task._id)(class=task.priority)
                .task-header
                h3.nomTache #{task.name} 
                if task.qui
                  div.nomQui
                    P Chef d'équipe : #{task.qui}
                p.nomTacheHeure Début de mission :
                .dateFormat 
                  p.date #{new Intl.DateTimeFormat('fr-FR', { day: 'numeric', month: 'long', year: 'numeric'}).format(new Date(task.date))} - #{task.heure}
                p.nomTacheHeure Fin de mission :
                .dateFormat     
                  p.date #{new Intl.DateTimeFormat('fr-FR', { day: 'numeric', month: 'long', year: 'numeric'}).format(new Date(task.datef))} - #{task.heuref}
                if task.description
                  p.taskDescritption Commentaires : #{task.description}
                .heureTravail
                  .test Résumé : #{task.heureTravail}h ( #{task.montant}€ )
                button(type="button" onclick="deleteTask(this)" class="button-delete") Supprimer

    script(src="/js/script.js")
    script.
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', function() {
          navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
            console.log('ServiceWorker registration successful with scope: ', registration.scope);
          }, function(err) {
            console.log('ServiceWorker registration failed: ', err);
          });
        });
      }
